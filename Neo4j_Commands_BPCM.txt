// LOADING EACH ONTOLOGY
CALL semantics.importOntology("url", "Turtle", { handleVocabUris: "IGNORE",  subClassOfRel: "subClassOf" });

// LOADING THE CSV VALUES INTO THE GRAPH
LOAD CSV WITH HEADERS FROM "file:///Company_A_Fin_Ratios.csv" AS row
MERGE (a:Resource {name: "Assets"})
MERGE (b:Resource {name: "PBIT"})
MERGE (c:Resource {name: "Total_Assets"})
MERGE (d:Resource {name: "Total_Assets_Less_Current_Liabilities"})
MERGE (e:Resource {name: "Balance_Sheet_Data"})
MERGE (f:Resource {name: "Short_Term_Loans_&_Overdrafts"})
MERGE (g:Resource {name: "Operating_Cash_Flow"})
MERGE (h:Resource {name: "Stock_&_W.I.P"})
MERGE (i:Resource {name: "Longterm_Liabilities"})
MERGE (j:Resource {name: "Shareholders'_Funds"})
MERGE (k:Resource {name: "Income_Statement_Data"})
MERGE (l:Resource {name: "Turnover"})
MERGE (m:Resource {name: "Gross_Profit"})
MERGE (n:Resource {name: "Current_Liabilities"})
MERGE (o:Resource {name: "Trade_Creditors"})
MERGE (p:Resource {name: "Cash_Flow_Statement_Data"})
MERGE (q:Resource {name: "Cost"})
MERGE (r:Resource {name: "Interest_Paid"})
MERGE (s:Resource {name: "Trade_Debtors"})
MERGE (t:Resource {name: "Company's_Financial_Data"})
MERGE (u:Resource {name: "Current_Assets"})
MERGE (v:Resource {name: "Liabilities"})
SET a.value = toFloat(row.Assets)
SET b.value = toFloat(row.PBIT)
SET c.value = toFloat(row.Total_Assets)
SET d.value = toFloat(row.Total_Assets_less_Current_Liabilities)
SET e.value = toFloat(row.Balance_Sheet_Data)
SET f.value = toFloat(row.Short_Term_Loans_and_Overdrafts)
SET g.value = toFloat(row.Operating_Cash_Flow)
SET h.value = toFloat(row.Stock_and_WIP)
SET i.value = toFloat(row.Long_Term_Liabilities)
SET j.value = toFloat(row.Shareholders_Funds)
SET k.value = toFloat(row.Income_Statement_Data)
SET l.value = toFloat(row.Turnover)
SET m.value = toFloat(row.Gross_Profit)
SET n.value = toFloat(row.Current_Liabilities)
SET o.value = toFloat(row.Trade_Creditors)
SET p.value = toFloat(row.Cash_Flow_Statement_Data)
SET q.value = toFloat(row.Cost_of_Sales)
SET r.value = toFloat(row.Interest_Paid)
SET s.value = toFloat(row.Trade_Debtors)
SET t.value = toFloat(row.Companys_Financial_Data)
SET u.value = toFloat(row.Current_Assets)
SET v.value = toFloat(row.Liabilities)
RETURN row;

// CALCULATING THE RATIO VALUES
MATCH (roe:Resource {name: "Return_on_Equity"})
MATCH (roce:Resource {name: "Return_on_Capital_Employed"})
MATCH (pm:Resource {name: "Profit_Margin"})
MATCH (gm:Resource {name: "Gross_Margin"})
MATCH (nat:Resource {name: "Net_Assets_Turnover"})
MATCH (cr:Resource {name: "Current_Ratio"})
MATCH (lr:Resource {name: "Liquidity_Ratio"})
MATCH (cp:Resource {name: "Creditors_Payment"})
MATCH (dt:Resource {name: "Debtors_Turnover"})
MATCH (st:Resource {name: "Stock_Turnover"})
MATCH (gear:Resource {name: "Gearing"})
MATCH (ic:Resource {name: "Interest_Cover"})
MATCH (cfcr:Resource {name: "Cash_Flow_Coverage_Ratio"})
MATCH (clcr:Resource {name: "Current_Liability_Coverage_Ratio"})
MATCH (assets:Resource {name: "Assets"})
MATCH (pbit:Resource {name: "PBIT"})
MATCH (ta:Resource {name: "Total_Assets"})
MATCH (talcl:Resource {name: "Total_Assets_Less_Current_Liabilities"})
MATCH (bsd:Resource {name: "Balance_Sheet_Data"})
MATCH (stlao:Resource {name: "Short_Term_Loans_&_Overdrafts"})
MATCH (ocf:Resource {name: "Operating_Cash_Flow"})
MATCH (saw:Resource {name: "Stock_&_W.I.P"})
MATCH (ll:Resource {name: "Longterm_Liabilities"})
MATCH (sf:Resource {name: "Shareholders'_Funds"})
MATCH (isd:Resource {name: "Income_Statement_Data"})
MATCH (turnover:Resource {name: "Turnover"})
MATCH (gp:Resource {name: "Gross_Profit"})
MATCH (cl:Resource {name: "Current_Liabilities"})
MATCH (tc:Resource {name: "Trade_Creditors"})
MATCH (cfsd:Resource {name: "Cash_Flow_Statement_Data"})
MATCH (cost:Resource {name: "Cost"})
MATCH (ip:Resource {name: "Interest_Paid"})
MATCH (td:Resource {name: "Trade_Debtors"})
MATCH (cfd:Resource {name: "Company's_Financial_Data"})
MATCH (ca:Resource {name: "Current_Assets"})
MATCH (liabilities:Resource {name: "Liabilities"})
SET roe.value = (pbit.value / sf.value) * 100
SET roce.value = (pbit.value / talcl.value) * 100
SET pm.value = (pbit.value / turnover.value) * 100
SET gm.value = (gp.value / turnover.value) * 100
SET nat.value = turnover.value / talcl.value 
SET cr.value = -ca.value / cl.value
SET lr.value = (saw.value - ca.value) / cl.value
SET cp.value = cost.value / tc.value
SET dt.value = turnover.value / td.value
SET st.value = turnover.value / saw.value
SET gear.value = (-(stlao.value + ll.value) / sf.value) * 100 
SET ic.value = -pbit.value / ip.value
SET cfcr.value = -ocf.value / ll.value
SET clcr.value = -ocf.value / cl.value
RETURN clcr.value;

// EXPORTING THE RATIOS AS CSV
WITH "MATCH (a:Resource {name: 'Return_on_Equity'}),
            (b:Resource {name: 'Return_on_Capital_Employed'}),
            (c:Resource {name: 'Profit_Margin'}),
            (d:Resource {name: 'Gross_Margin'}),
            (e:Resource {name: 'Net_Assets_Turnover'}),
            (f:Resource {name: 'Current_Ratio'}),
            (g:Resource {name: 'Liquidity_Ratio'}),
            (h:Resource {name: 'Creditors_Payment'}),
            (i:Resource {name: 'Debtors_Turnover'}),
            (j:Resource {name: 'Stock_Turnover'}),
            (k:Resource {name: 'Gearing'}),
            (l:Resource {name: 'Interest_Cover'}),
            (m:Resource {name: 'Cash_Flow_Coverage_Ratio'}),
            (n:Resource {name: 'Current_Liability_Coverage_Ratio'})
      RETURN a.value AS Return_on_Equity,
             b.value AS Return_on_Capital_Employed,
             c.value AS Profit_Margin,
             d.value AS Gross_Margin,
             e.value AS Net_Assets_Turnover,
             f.value AS Current_Ratio,
             g.value AS Liquidity_Ratio,
             h.value AS Creditors_Payment,
             i.value AS Debtors_Turnover,
             j.value AS Stock_Turnover,
             k.value AS Gearing,
             l.value AS Interest_Cover,
             m.value AS Cash_Flow_Coverage_Ratio,
             n.value AS Current_Liability_Coverage_Ratio
      " AS query
CALL apoc.export.csv.query(query, "Ratios_Export.csv", {})
YIELD file, source, format, nodes, relationships, properties, time, rows, batchSize, batches, done, data
RETURN file, source, format, nodes, relationships, properties, time, rows, batchSize, batches, done, data;